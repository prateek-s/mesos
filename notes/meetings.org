
* Jul 7

The exo-cloud pitch is better than the "price and traniency aware cluster manager for the cloud". While the cluster management angle might be a useful feature with a lot of appeal to end-users, the research story with exo-cloud is more promising.


** Can we still call it the exo-cloud?

YES. In our setup, the exo-cloud does pool management on behalf of the applications. 

*The applications control their own behaviour on revocations, price changes etc.*

** Knobs

What knobs should applications be provided with? 

- Binary multi/single market switch. This determines whether the application has any use of multiple markets or not. 

An improved version of this is to have two knobs. 

- Price sensitivity. This dictates how price sensitive the application is. *This is very similar to the bid price*. 

- Resiliency. This tells the exo-cloud how resilient the application is to simultaenous failures. 

** Virtual clusters
The exo-cloud provides "virtual clusters" to applications which 


** Price sensitive applications
Atleast one price-sensitive application needed which rejects offers if they are too expensive. 




* Jul 21
** Misc
Micro-clouds and application level networking stacks to reduce the complexity of container live migration. 


Application policies. Goal is to provide a common interface for applications to use transient cloud servers, which is what the exocloud seeks to provide. 

Policy groups are:

*** Revocation policies
1. Replenish
   Call RequestResources
2. Die and restart
   Self Kill and restart again? 
3. Checkpoint
   Internal operation


*** Replenishment after warning 
1. Eager replenishment
   Call RequestResources
2. Degraded mode 
   Do Nothing 
3. Lazy wait for lower prices
   Call =RequestResourcesLazy=

*** Warning actions 
1. Relinquish resources and "pause" 
   Give up all offers
2. Relinquish and die
   Give up all offers and die
3. Continue operating and use up the warning time 
   Continue using offers, carefully
4. Checkpoint if deemed feasible 
   Internal operation



*** Checkpointing 
1. Eager checkpointing (periodic)
   Internal operation
2. Lazy, last-minute checkpointing 
   Internal operation

*** Application specific
1. Price sensitive application
   Monitor prices continuously
2. 
